# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# A Tera template to be rendered as the changelog's header.
# See https://keats.github.io/tera/docs/#introduction
header = """
= Changelog
:source-highlighter: highlight.js
:toc:

All notable changes to this project will be documented in this file.\n
"""
# A Tera template to be rendered for each release in the changelog.
# See https://keats.github.io/tera/docs/#introduction
body = """
{%- macro remote_url() -%}
  https://gitlab.com/ds_2/terraform-modules
{%- endmacro -%}

{% macro print_commit_url(commit_id) -%}
  üîólink:{{ self::remote_url() }}/-/commit/{{ commit_id }}[{{ commit_id | truncate(length=7, end="") }}]
{% endmacro -%}

{% macro print_commit(commit) -%}
    * {% if commit.scope %}*(üî† {{ commit.scope }})* {% endif %}\
        {% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message | upper_first }} - \
        {{ self::print_commit_url(commit_id=commit.id) }}
        {%- if commit.body -%}
        [source,text]
        ----
        {{ commit.body }}
        ----
        {%- endif -%}
        {%- if commit.breaking -%}
        ** ‚ö†Ô∏è *BREAKING*: {{commit.breaking_description}}
        {%- endif -%}
{% endmacro -%}

{% if version %}\
  == {{ version | trim_start_matches(pat="v") }} - {{ timestamp | date(format="%Y-%m-%d") }}

  * **Release**: {{ self::remote_url() }}/-/releases/v{{ version | trim_start_matches(pat="v") }}
  * **Tag**: {{ self::remote_url() }}/-/tags/v{{ version | trim_start_matches(pat="v") }}
  {% if previous.version %}\
    * **Delta**: {{ self::remote_url() }}/compare?from={{ previous.version }}&to=v{{ version | trim_start_matches(pat="v") }}
  {% endif %}\
{% else %}\
    == Unreleased
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}
    === {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor %}
    {% for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
    {% raw %}\n{% endraw %}\
{% endfor -%}\n
{%- if github -%}
{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  ## New Contributors ‚ù§Ô∏è
{% endif %}\
{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} made their first contribution
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor -%}
{%- endif %}


"""
# A Tera template to be rendered as the changelog's footer.
# See https://keats.github.io/tera/docs/#introduction
footer = """
== Version Table
{% for release in releases -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            * üîñ[{{ release.version | trim_start_matches(pat="v") }}]: https://gitlab.com/ds_2/terraform-modules/compare?from={{ release.previous.version }}&to={{ release.version }}
        {% endif -%}
    {% else -%}
        {% if release.previous.version -%}
        * üîñ[unreleased]: https://gitlab.com/ds_2/terraform-modules/compare?from={{ release.previous.version }}&to=HEAD
        {% endif -%}
    {% endif -%}
{% endfor %}
"""
# Remove leading and trailing whitespaces from the changelog's body.
trim = true
# An array of regex based postprocessors to modify the changelog.
postprocessors = [
  # Replace the placeholder `<REPO>` with a URL.
  { pattern = '<REPO>', replace = "https://gitlab.com/ds_2/terraform-modules" }, # replace repository URL
]

[git]
# Parse commits according to the conventional commits specification.
# See https://www.conventionalcommits.org
conventional_commits = true
# Exclude commits that do not match the conventional commits specification.
filter_unconventional = true
# Split commits on newlines, treating each line as an individual commit.
split_commits = false
# An array of regex based parsers to modify commit messages prior to further processing.
commit_preprocessors = [
  # Replace issue numbers with link templates to be updated in `changelog.postprocessors`.
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))" },
  # Check spelling of the commit message using https://github.com/crate-ci/typos.
  # If the spelling is incorrect, it will be fixed automatically.
  { pattern = '.*', replace_command = 'typos --write-changes -' },
]
# An array of regex based parsers for extracting data from the commit message.
# Assigns commits to groups.
# Optionally sets the commit's scope and can decide to exclude commits from further processing.
commit_parsers = [
  { message = "^feat", group = "üöÄ Features" },
  { message = "^fix", group = "üêõ Bug Fixes" },
  { message = "^doc", group = "üìö Documentation" },
  { message = "^perf", group = "‚ö° Performance" },
  { message = "^refactor\\(clippy\\)", skip = true },
  { message = "^refactor", group = "‚ôªÔ∏è Refactor" },
  { message = "^ci", group = "üë∑ CI/CD" },
  { message = "^style", group = "üé® Styling" },
  { message = "^test", group = "üß™ Testing" },
  { message = "^chore\\(release\\): prepare for", skip = true },
  { message = "^chore", group = "‚öôÔ∏è Miscellaneous Tasks" },
  { message = "^Merging", skip = true },
  { body = "$^", skip = true },
  { body = ".*security", group = "üõ°Ô∏è Security" },
  { message = "^revert", group = "‚óÄÔ∏è Revert" },
]
link_parsers = [
  { pattern = "#(\\d+)", href = "https://gitlab.com/ds_2/terraform-modules/-/issues/$1" },
  { pattern = "RFC(\\d+)", text = "ietf-rfc$1", href = "https://datatracker.ietf.org/doc/html/rfc$1" },
]
# Prevent commits that are breaking from being excluded by commit parsers.
protect_breaking_commits = false
# Exclude commits that are not matched by any commit parser.
filter_commits = true
# Regex to select git tags that represent releases.
tag_pattern = "v[0-9].*"
# Regex to select git tags that do not represent proper releases.
# Takes precedence over `tag_pattern`.
# Changes belonging to these releases will be included in the next release.
skip_tags = "beta|alpha"
# Regex to exclude git tags after applying the tag_pattern.
ignore_tags = ""
# Order releases topologically instead of chronologically.
topo_order = false
# Order of commits in each group/release within the changelog.
# Allowed values: newest, oldest
sort_commits = "oldest"

[bump]
features_always_bump_minor = true
breaking_always_bump_major = true
initial_tag = "v0.1.0"
